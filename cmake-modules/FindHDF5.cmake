find_path(HDF5_INCLUDE_DIR NAMES H5PTpublic.h)
message(STATUS "got HDF5 includes in ${HDF5_INCLUDE_DIR}")
if (HDF5_INCLUDE_DIR)
   foreach(CHECK_INCLUDE_FILE H5Fpublic.h H5Tpublic.h H5Apublic.h H5LTpublic.h)
     find_file(HDF5_HAS_INCLUDE_${CHECK_INCLUDE_FILE} NAMES ${CHECK_INCLUDE_FILE} PATHS ${HDF5_INCLUDE_DIR} NO_DEFAULT_PATH)
     set(HDF5_HAS_INCLUDE_${CHECK_INCLUDE_FILE} ${HDF5_HAS_INCLUDE_${CHECK_INCLUDE_FILE}} CACHE INTERNAL "mydoc")
     if (NOT HDF5_HAS_INCLUDE_${CHECK_INCLUDE_FILE})
       message(WARNING "cannot find HDF5 header ${CHECK_INCLUDE_FILE}")
       set(HDF5_INCLUDE_DIR NOTFOUND CACHE STRING "HDF5 include directory" FORCE)
       break()
     endif (NOT HDF5_HAS_INCLUDE_${CHECK_INCLUDE_FILE})
   endforeach(CHECK_INCLUDE_FILE)
endif (HDF5_INCLUDE_DIR)

find_library(HDF5_LIBRARY NAMES hdf5 PATHS /usr/lib /usr/local/lib) 
find_library(HDF5_HL_LIBRARY NAMES hdf5_hl PATHS /usr/lib /usr/local/lib) 

if (HDF5_INCLUDE_DIR AND HDF5_LIBRARY AND HDF5_HL_LIBRARY)
   set(HDF5_FOUND TRUE)
endif (HDF5_INCLUDE_DIR AND HDF5_LIBRARY AND HDF5_HL_LIBRARY)

if (HDF5_FOUND)
   if (NOT HDF5_FIND_QUIETLY)
      message(STATUS "Found HDF5: ${HDF5_LIBRARY}")
   endif (NOT HDF5_FIND_QUIETLY)
else (HDF5_FOUND)
   if (HDF5_FIND_REQUIRED)
      message(WARNING "Could not find HDF5")
   endif (HDF5_FIND_REQUIRED)
endif (HDF5_FOUND)
