find_path(LIBCONFIG_INCLUDE_DIR NAMES libconfig.h)
message(STATUS "got libconfig includes in ${LIBCONFIG_INCLUDE_DIR}")
if (LIBCONFIG_INCLUDE_DIR)
   foreach(CHECK_INCLUDE_FILE libconfig.h)
     find_file(LIBCONFIG_HAS_INCLUDE_${CHECK_INCLUDE_FILE} NAMES ${CHECK_INCLUDE_FILE} PATHS ${LIBCONFIG_INCLUDE_DIR} NO_DEFAULT_PATH)
     set(LIBCONFIG_HAS_INCLUDE_${CHECK_INCLUDE_FILE} ${LIBCONFIG_HAS_INCLUDE_${CHECK_INCLUDE_FILE}} CACHE INTERNAL "mydoc")
     if (NOT LIBCONFIG_HAS_INCLUDE_${CHECK_INCLUDE_FILE})
       message(WARNING "cannot find libconfig header ${CHECK_INCLUDE_FILE}")
       set(LIBCONFIG_INCLUDE_DIR NOTFOUND CACHE STRING "libconfig include directory" FORCE)
       break()
     endif (NOT LIBCONFIG_HAS_INCLUDE_${CHECK_INCLUDE_FILE})
   endforeach(CHECK_INCLUDE_FILE)
endif (LIBCONFIG_INCLUDE_DIR)

find_library(LIBCONFIG_LIBRARY NAMES config PATHS /usr/lib /usr/local/lib) 

if (LIBCONFIG_INCLUDE_DIR AND LIBCONFIG_LIBRARY)
   set(LIBCONFIG_FOUND TRUE)
endif (LIBCONFIG_INCLUDE_DIR AND LIBCONFIG_LIBRARY)

if (LIBCONFIG_FOUND)
   if (NOT LIBCONFIG_FIND_QUIETLY)
      message(STATUS "Found libconfig: ${LIBCONFIG_LIBRARY}")
   endif (NOT LIBCONFIG_FIND_QUIETLY)
else (LIBCONFIG_FOUND)
   if (LIBCONFIG_FIND_REQUIRED)
      message(WARNING "Could not find libconfig")
   endif (LIBCONFIG_FIND_REQUIRED)
endif (LIBCONFIG_FOUND)
