%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.6.5 (assemblage 10H574) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 582 257
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 582 257
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HEMZJA+Helvetica
%!FontType1-1.0: HEMZJA+Helvetica 1.0000.0.0000
14 dict begin/FontName /HEMZJA+Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /e put
dup 35 /d put
dup 36 /i put
dup 37 /u put
dup 38 /m put
dup 39 /space put
dup 40 /r put
dup 41 /a put
dup 42 /t put
dup 43 /o put
dup 44 /n put
dup 45 /T put
dup 46 /g put
dup 47 /l put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<






2F003F3FED3FED31304379402C001704260B1309260000110226010717092600050D0226010A140C260001100C26000816062601030E0626012B2B2B2B012B2B2B2B2B81005D241235342726232206151416331200111002212200351000330702E085304CBAA59696A3D6011EFCFEF7DDFEFC0112E70674010FA6965E94FCB2ABE403DAFEECFEF4FEFDFEAE012BFC010E014005000100890000029204470011004F40262703260D37034704040E0810020E0911090C270805070006110A081A13012E10291100191213B80145B321627E182B2B4EF43C4DFDE44E10E6003F3F4D3FC4FDC411123939011112393130005D1333153E0133321617152E0123220615112389AB15A46B05181D101B108892B4042FB9369B0203BE0302AF72FD980000010017FFEF0209055A00180052B50D2E0AC00E01B8013F40250416391703060E0A111A17171A0301062900150E150F031F030203FC1619191AFC21677D182B2B4EF44DFD5D39C42F3CFD3C104E456544E6002F3F3F3C4DFD3CED10FDE431301333113315231114171633323637150E012322263511233533A8B6ABAB2615310D1E141F43277E5A9191055AFED593FD4538130B01028E0908816702C593000000020080FFE303DE044900170018005E403AB814C81402091308141913191428067703D707070800050E0A00060D0A051D120B180718180B160D2E0A290C0B1A1A01291619191AD2216242182B2B4EF44DED4E10F63C4DFDE41112392F003F3FED3F3F3C391112393130005D015D0111141716333237363511331123370607062322272635112501381A3083BC4425B4AA0223346793E5532D01AF042FFD39523460A85A9D020EFBD19E3D2A5499528902D81A000001000000000000642C0B935F0F3CF500110800000000005F4D8F0000000000C621BCD6F865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B91000100000000000000000000000000000010051200420239000006AA009704E300210473005204730038047300480473003D01C7008401C7008906AA0084047300840473003B02AA0089023900170473008000000034003400C000EE01B8022402EE039603C403E6046204BE0536057C05CC06260000000100000010006F0009006B0007000200100010005D000007E80A1D00040001B800532BB800492BB8003F2BB800352BB8002B2B4118008001A6009001A600A001A600030069018B0079018B0089018B0099018B00040089018B0099018B00A9018B00B9018BB2040840BA0179001A014A400B041F5414191F180A0B1FD2B80106B49E1FD918E3BB0119000D00E10119B20D0009410A01A0019F0064001F01A50025017A00480028019AB3296C1F60410A01A9007001A9008001A90003008001A9000101A9B21E321FBE012C

00>] def
/CharStrings 16 dict dup begin
/.notdef 0 def
/space 1 def
/M 2 def
/T 3 def
/a 4 def
/d 5 def
/e 6 def
/g 7 def
/i 8 def
/l 9 def
/m 10 def
/n 11 def
/o 12 def
/r 13 def
/t 14 def
/u 15 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4265107 def
currentdict currentfile eexec

EF893EE87FF74450CB3E9BC5BAC10E0DB3DC02169F8EE66A6CAC97B7A9E903BC9585420E6031D5139AC539ACD598CC515D37611717A24F5CE8EC9969A90ADE2403426A2D9BDEE7D1B4A63497D23C71B29F75917F38819DCB2CB4A63316A1AB58858DB9F062BFD5929ADB7C03170B53E9AEDD1A267534F2D41381594BE827F227A1149A1DF776E776BE82B625BE101951E1C83BFCB44654484168408521CCB2F2475EB90F96683DBE598058C5F7E413CF1362BEA0FCFB00CB9B0FB681BB03BCF4657638E7F3135020C227C6CBA12401F1538A9D76666D13624D13867802F0C41314AE56A6FF4E21D6A0A731618ACFEB18C255CACDFFAE0D08113AC164FF990BD2B047691D10EE3B31AB5FC6E4CBFE1CEFDB72C601C62A113E220842FD926809879B0F1A9EFE29317E6EDFA827128E895D0A8868E4584AF4D25BE41B14FD31D2E680B5817C35DF4DBC2DA9F628AA8A1D5F276B18919B80E489E98363E349D3C00C6CCCD9AE9C47596E4532FDBFC173FB8DDFCC48733EF7CC205A2F963FCD8A764106126C0E1966CBE316C4CC76EA6E8796A38AB9FF8D6CAA10798218C177E107F2A7157FC278ACA3C83E558EC841E58E0E3DF6B832F7260DC4D89D6AF8C40180E555264E151BC21281500995072411CF790FC193D45A271278FFE1CAFC2F4036B1931067AC963C9EA46D56233B3DF57E8DD71DD606146E099FADC32208922A74DAB3605417F9F4BC7BB8101353377A3180AEEBECE8822415E634047E6A8FCD5FD7D8BF039AE0DCA1313D3F4562E4AF8BBDFAF22D8966E0A95E69C9BDABA7F8B370B717A2F0EA75F2C667A6A4B8412A4D71A3A1377042170F0E263886FF558B29B39A5FD2446363AE150BAA48B3AEDE397E5F840C480FA2F0E6840EA3C2D30B72AAC446F15EF1EE8E6646DD61DA5BD1C45D44AD5EDF634A99AAB24E529E25E9CA32C143E2F7F4E3C16749AAB6412B7C9DE57978B71180912A72DF8F799E8A820D032D00AE3B360C984F076DAF42D45C439638AE0ADAC79E728A49269E9A2837B4B822EF6DEDDE1A144B643F5B05D9CF91F65D6AC9690E844A816B693F8777A4A05AC6CD605D41667D89F97A76FF8B5E474A41350FD8F3D50C2804B3EBF8B8278E43101E9A0E786C840DB9700DDFAD1055E43505A63DB6D3F1405F6AF367EA4CD65B36349CBDD273782CD1EFF8411B017855215339A974F6EA6C3F1A533E56437174C0E708DD57AA25334B241B4C0978703215D7BCAA5713583F2B184245B28E65C798BC587408085F48C70E09E0C4D570D0E913FC07321EEE07162902AEA69AEA27C2B74E0672901B13ACDCB5F90A22F08160CB566528BC1631AF4A615136518849DF7FCC6ADF0DF22D8C6F090E8534DD43D1D23814D69012A69263F766C7F7CCF195ED6E0C809089EE6ABEABB41B56544951D8B7FB249C02DA091B1327607213D0
A6AAB5E6815F660560B0AE58A3AF53D4A95EAD0AD84A4A2EBFF87529705D60AE9E52577F9D386C59A8009295D8FB00DB4E942B69626D233EDD36FBEFCCD61461EF5AE8542A4A9E86B508E9F27D98BE2C8F014EC2FBAEC839E1BE9B55EECD98865E4755C829D0ECC1B8E0AC5E22F9B3D9A064F36F0D810919A3D21DEE388C16CE637414623A08D5216FCD7B2272AD2620B1C8DB07D5A532B4143D94DBE54F809CC278EC16BC7A0F5460D333566E03731DC6387D582F723DBEA08739A052D5C9B29D5D88B6859F7AAF0068BE53BB00C3ECD9729B6A53508FB06173DE986CD9BC2E5EF989ABA995A7B97AA5FA26DCF07C8F2F52A31A7DA7A21D7D855B312CC375822E19788DCEFAFBA2D296D9080475CCEAE970D897044904F8F4A314258F17D06D27AF949E04B4D08BA694C22F1DE35BA658294CA95A936767E9A657B030E5C790474EE37D5922E1B4E781842646357FD4A36B9547D697BF82A3423E0886CAE5798D92DE6EBFABB31707DD193FD8B74EFAF9FA5107DB350DD197FA917C012749286E8E565BFF52FA01D93303A418A9C6ED33BC060B4216DE943BD6917B959EA6BFBEBC17E60DB9D1DA46861E02207C58D90C3A84271F5A048677C7209931EF506AB3429FC9050C4D239D922B52671E044DEB1BC26DB4598317F1A40F58EFABA0B28AEC0C722CCFFA5450C2C2CA50F5766483EA2E9FFCBDF736FA429AC48B958496804E0DC7696A35585DDD8FFB69E4A4EDAEB614E692A4DC2DA32A2EC1D8F240ECC0FD7839D603D9B659B43846ED167DFA6FD6DAD1F50F1C2043AA02470C4C7C8A80C436FCFC6134984E4197D50157125C3B43CB3795A49C2B45DD71B3CF239C17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HEMZJA+Helvetica cguidfix
/F1.1/HEMZJA+Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 582 256.5 rc
0 256.5 m
582 256.5 l
582 0 l
0 0 l
h
f
[
1
5
] 0 d
0.60000002 i
0 sc
1 0 0 -1 10.5 285.5 cm
36.5 29.5 m
36.499989 251.56792 l
S
CM
46.5 236 m
56.5 231 l
53.5 236 l
56.5 241 l
46.5 236 l
46.5 231 m
46.5 241 l
f
[] 0 d
1 0 0 -1 10.5 285.5 cm
36 49.5 m
46 54.5 l
43 49.5 l
46 44.5 l
36 49.5 l
36 54.5 m
36 44.5 l
S
CM
539.47656 236 m
529.54614 240.96521 l
532.52527 236 l
529.54614 231.03479 l
539.47656 236 l
539.47656 240.96521 m
539.47656 231.03479 l
f
1 0 0 -1 10.5 285.5 cm
528.97656 49.5 m
519.04614 44.53479 l
522.02527 49.5 l
519.04614 54.46521 l
528.97656 49.5 l
528.97656 44.53479 m
528.97656 54.46521 l
S
43 49.5 m
522.02527 49.5 l
S
0 i
/F1.1[ 12 0 0 -12 0 0]sf
234.5 43.5 m
(!"#$%&'#%\(\)*$+,)[ 10.170837 6.848572 6.848572 2.840759 6.848541 10.170837 3.508728 6.848572 6.848572 4.170837 6.848572 3.508698 2.840759 6.848572 0.000000 ] xS
0.60000002 i
36.000004 85.5 m
36.000004 75.5 l
S
106.99979 75.517883 m
106.99979 85.482117 l
S
36 80.5 m
107.00694 80.5 l
S
330.00003 97.5 m
329.99997 87.5 l
S
365.05194 87.508926 m
365.05194 97.491074 l
S
330 92.5 m
365.05551 92.5 l
S
365 85.5 m
365 75.5 l
S
435.99982 75.517853 m
435.99982 85.482147 l
S
365 80.5 m
436.00696 80.5 l
S
259 85.5 m
259 75.5 l
S
329.99982 75.517853 m
329.99982 85.482147 l
S
259 80.5 m
330.00696 80.5 l
S
106.99998 97.5 m
107.00002 87.5 l
S
259.06641 87.538147 m
259.06641 97.461853 l
S
107 92.5 m
259.08167 92.5 l
S
436 97.5 m
436 87.5 l
S
526.9978 87.522888 m
526.9978 97.477112 l
S
436 92.5 m
527.00696 92.5 l
S
36.000004 146.49998 m
36.000004 136.50002 l
S
106.99981 136.51787 m
106.99981 146.48213 l
S
36 141.5 m
107.00696 141.5 l
S
310.00003 158.5 m
309.99997 148.5 l
S
345.052 148.50885 m
345.052 158.49115 l
S
310 153.5 m
345.05554 153.5 l
S
408 146.5 m
408 136.5 l
S
478.99979 136.51793 m
478.99979 146.48207 l
S
408 141.5 m
479.00696 141.5 l
S
259 146.5 m
259 136.5 l
S
329.99982 136.51785 m
329.99982 146.48215 l
S
259 141.5 m
330.00696 141.5 l
S
57.000046 158.5 m
56.999969 148.50003 l
S
209.06641 148.53815 m
209.06641 158.46185 l
S
57 153.5 m
209.08167 153.5 l
S
16 206.5 m
16 196.5 l
S
86.999809 196.51787 m
86.999809 206.48213 l
S
16 201.5 m
87.006958 201.5 l
S
300.00003 218.5 m
299.99997 208.5 l
S
335.052 208.50885 m
335.052 218.49115 l
S
300 213.5 m
335.05554 213.5 l
S
245 206.5 m
245 196.5 l
S
315.99982 196.51785 m
315.99982 206.48215 l
S
245 201.5 m
316.00696 201.5 l
S
119 206.5 m
119 196.5 l
S
189.9998 196.51788 m
189.9998 206.48212 l
S
119 201.5 m
190.00696 201.5 l
S
47 218.5 m
47 208.5 l
S
199.06641 208.53815 m
199.06641 218.46185 l
S
47 213.5 m
199.08167 213.5 l
S
445.99997 218.49998 m
446.00003 208.49998 l
S
536.9978 208.52289 m
536.9978 218.47711 l
S
446 213.5 m
537.00696 213.5 l
S
346 206.5 m
346 196.5 l
S
416.99982 196.51785 m
416.99982 206.48215 l
S
346 201.5 m
417.00696 201.5 l
S
[
1
5
] 0 d
528.5 29.5 m
528.5 251.56792 l
S
2 w
[] 0 d
-8.5 64.5 m
570.5 64.5 l
570.5 108.5 l
-8.5 108.5 l
h
-8.5 64.5 m
S
-8.5 125.5 m
570.5 125.5 l
570.5 169.5 l
-8.5 169.5 l
h
-8.5 125.5 m
S
-9.5 185.5 m
569.5 185.5 l
569.5 229.5 l
-9.5 229.5 l
h
-9.5 185.5 m
S
1 w
90 275.5 m
90 265.5 l
S
160.99979 265.51788 m
160.99979 275.48212 l
S
90 270.5 m
161.00694 270.5 l
S
2 w
275.5 262.5 m
350.5 262.5 l
350.5 284.5 l
275.5 284.5 l
h
275.5 262.5 m
S
0 i
171.5 275.5 m
(-$&"'\(\),.")[ 7.460938 2.796875 10.126953 6.804688 3.464844 4.126953 6.804688 6.804688 6.804688 0.000000 ] xS
359.5 278.5 m
(-$&"/$,")[ 7.536865 2.872803 10.202881 6.880615 2.872803 2.872803 6.880615 0.000000 ] xS
ep
end
%%Trailer
%%EOF
